{"version":3,"sources":["webpack:///./src/pages/project.js","webpack:///./src/components/index/projectList.js","webpack:///./content/projects.js"],"names":["About","data","location","useState","isFilter","setFilter","siteTitle","site","siteMetadata","title","filterByCategory","projects","filter","item","category","indexOf","length","id","className","map","index","aria-hidden","onClick","e","key","isPost","ProjectList","slice","href","url","rel","target","itemProp","name","icon","keywords","tag","description","module","exports","dscription"],"mappings":"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","file":"component---src-pages-project-js-81a22060c0f3e95f3a5c.js","sourcesContent":["import React, { useState } from \"react\"\n\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout.js\"\nimport SEO from \"../components/seo.js\"\nimport ProjectList from \"../components/index/projectList.js\"\nimport projects from \"../../content/projects.js\"\n\nconst About = ({ data, location }) => {\n  const [isFilter, setFilter] = useState(\"All\")\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const categories = [\"All\", \"web dev\", \"deep learning\", \"NLP\"]\n\n  const filterByCategory =\n    isFilter && isFilter !== \"All\"\n      ? projects.filter(item => item.category.indexOf(isFilter) + 1)\n      : projects\n\n  if (projects.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <SEO title={\"Projects\"} />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <section id=\"page\">\n      <Layout location={location} title={siteTitle}>\n        <SEO title={\"Projects\"} />\n        <section>\n          <section className=\"category-filter\">\n            <h4>categories : </h4>\n            <ul>\n              {categories.map((item, index) => (\n                <li\n                  aria-hidden=\"true\"\n                  className={isFilter === item ? \"active\" : null}\n                  onClick={e => setFilter(item)}\n                  key={index}\n                >\n                  {item}\n                </li>\n              ))}\n            </ul>\n          </section>\n          <section className=\"all-project-list\">\n            <ProjectList projects={filterByCategory} isPost />\n          </section>\n        </section>\n      </Layout>\n    </section>\n  )\n}\n\nexport default About\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    blog: allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { fileAbsolutePath: { regex: \"//blog//\" } }\n    ) {\n      nodes {\n        excerpt(pruneLength: 230)\n        fields {\n          slug\n          readingTime {\n            text\n          }\n        }\n        frontmatter {\n          date\n          category\n          title\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\n\nconst ProjectList = ({ projects, length }) => {\n  return (\n    <div className=\"index-blog\">\n      <ol>\n        {projects.slice(0, length || projects.length).map((item, index) => (\n          <li className=\"general-list\" key={index}>\n            <a href={item.url} rel=\"noreferrer\" target=\"_blank\">\n              <header>\n                <h2>\n                  <span itemProp=\"headline\">{item.name}</span>\n                </h2>\n                <b>{item.icon}</b>\n              </header>\n              <ul>\n                {item.keywords.map((tag, key) => (\n                  <li key={key}>{tag}</li>\n                ))}\n              </ul>\n              <p>{item.description}</p>\n            </a>\n          </li>\n        ))}\n      </ol>\n    </div>\n  )\n}\n\nexport default ProjectList\n","module.exports = [\n  // top candidates\n  {\n    name: \"Mem[e]mory card game\",\n    description:\n      \"this is probably the most fun side project I had so far. Functionality: Select doges from doge cards!! \",\n    keywords: [\"React\"],\n    category: \"web dev\",\n    url: \"https://violetguos.github.io/memory_card/\",\n    icon: \"üê∂\",\n  },\n\n  {\n    name: \"Speaker Accent Classification\",\n    description: \"Classify the accents of audiobook with CNN and RNN.\",\n    keywords: [\"Praat\", \"PyTorch\", \"Python\"],\n    category: \"deep learning\",\n    url: \"https://github.com/violetguos/project-ift6390\",\n    icon: \"üó£\",\n  },\n\n  {\n    name: \"Fake news detections\",\n    description:\n      \"Linear, ensemble, and neural network models to perform multi-class classification on news articles.\",\n    keywords: [\"NLP\", \"LSTM\"],\n    category: \"NLP\",\n    url: \"https://github.com/violetguos/COMP550-Project\",\n    icon: \"üóû\",\n  },\n\n  // the rest of the projects\n  // react\n\n  {\n    name: \"Online CV\",\n    description: \"Fill out a simple form and present your online CV\",\n    keywords: [\"React\"],\n    category: \"web dev\",\n    url: \"https://violetguos.github.io/cv-react\",\n    icon: \"üíº\",\n  },\n  // rails\n  {\n    name: \"Eventpriv\",\n    description: \"Invite friends to your private events!! No more pesty DMs! \",\n    keywords: [\"Ruby\", \"Rails\", \"Bulma\"],\n    category: \"web dev\",\n    url: \"https://github.com/violetguos/eventpriv\",\n    icon: \"üë•\",\n  },\n  {\n    name: \"Flight booker\",\n    description:\n      \"book tickets for multiple passengers. Integrated Stripe API for Ruby\",\n    keywords: [\"Ruby\", \"Rails\", \"Stripe\"],\n    category: \"web dev\",\n    url: \"https://github.com/berat/wordBox-react-native\",\n    icon: \"‚úàÔ∏è\",\n  },\n  // Vanilla JS\n  {\n    name: \"Music box\",\n    description: \"Dynamic Gif display based on your music.\",\n    keywords: [\"JavaScript\"],\n    category: \"web dev\",\n    url: \"https://yayinternet.github.io/hw4-music-box-violetguos/\",\n    icon: \"üé∂\",\n  },\n  {\n    name: \"Flash cards\",\n    dscription: \"A set of flash cards, swipe right to learn CSS & Korean.\",\n    keywords: [\"JavaScript\", \"CSS\", \"HTML\"],\n    category: \"web dev\",\n    url: \"https://yayinternet.github.io/hw3-flashcards-violetguos/\",\n    icon: \"üìá\",\n  },\n  {\n    name: \"Adopt your pup\",\n    description: \"Find a puppy based on your personality!\",\n    keywords: [\"HTML\", \"CSS\", \"JavaScript\"],\n    category: \"web dev\",\n    url: \"https://yayinternet.github.io/hw2-quiz-ext-violetguos/\",\n    icon: \"üê∂\",\n  },\n  {\n    name: \"Tic Tac Toe\",\n    description:\n      \"Classic tic tac toe, aka naughts and crosses. Also a classic UI exercise.\",\n    keywords: [\"HTML\", \"CSS\", \"JavaScript\"],\n    category: \"web dev\",\n    url: \"https://violetguos.github.io/js-odin/tic-tac-toe/\",\n    icon: \"‚≠ïÔ∏è\",\n  },\n  {\n    name: \"Rock paper scissor\",\n    description: \"Classic rock paper scissor. Also a classic UI project.\",\n    keywords: [\"HTML\", \"CSS\", \"JavaScript\"],\n    category: \"web dev\",\n    url: \"https://violetguos.github.io/chifoumi/\",\n    icon: \"üî®\",\n  },\n  {\n    name: \"etch a sketch\",\n    description: \"the ipad of our times.\",\n    keywords: [\"HTML\", \"CSS\", \"JavaScript\"],\n    category: \"web dev\",\n    url: \"https://violetguos.github.io/etch-a-sketch/\",\n    icon: \"üë©‚Äçüé®\",\n  },\n  // Pure CSS\n  {\n    name: \"mock Youtube\",\n    description: \"Mocks the UI of Youtube. Built without any UI framework.\",\n    keywords: [\"HTML\", \"CSS\"],\n    category: \"web dev\",\n    url: \"https://violetguos.github.io/html-css/youtube/index.html\",\n    icon: \"üì∫\",\n  },\n  {\n    name: \"IOS calculator on the web\",\n    description:\n      \"Replica of the iOS 12 calculator. Built without any UI framework.\",\n    keywords: [\"HTML\", \"CSS\", \"JavaScript\"],\n    category: \"web dev\",\n    url: \"https://violetguos.github.io/web-calc/\",\n    icon: \"üßÆ\",\n  },\n\n  // deep learning\n  {\n    name:\n      \"Multi-digit street number bounding box segmentation and classification\",\n    description:\n      \"Use a pretrained Faster RCNN to segment street numbers and a ResNet to classify the digits.\",\n    keywords: [\"PyTorch\", \"ResNet\", \"Faster RCNN\"],\n    category: \"deep learning\",\n    url: \"https://github.com/violetguos/humanware\",\n    icon: \"üö™\",\n  },\n  {\n    name: \"Building deep learning NLP models from scratch\",\n    description:\n      \"Built RNN, GRU, transformer from scratch (without using the predefined cells in Pytorch)!\",\n    keywords: [\"Pytorch\"],\n    category: \"deep learning\",\n    url: \"https://github.com/violetguos/ift6135-rnn\",\n    icon: \"üóû\",\n  },\n  {\n    name: \"Predict User Identity from ECG Signals\",\n    description:\n      \"Used semi-supervised learning and VAE to predict identity of users based on ECG signals\",\n    keywords: [\"Pytorch\", \"VAE\"],\n    category: \"deep learning\",\n    url: \"https://github.com/violetguos/OMsignal\",\n    icon: \"ü©∫\",\n  },\n\n  // data science\n  {\n    name: \"Basic NLP algorithms\",\n    description: \"Sentiment analysis and decoding ciphers\",\n    keywords: [\"NLP\", \"NLTK\"],\n    category: \"NLP\",\n    url: \"https://github.com/violetguos/nlp\",\n    icon: \"üìë\",\n  },\n  {\n    name: \"Fake news detections\",\n    description:\n      \"Linear, ensemble, and neural network models to perform multi-class classification on news articles.\",\n    keywords: [\"NLP\", \"LSTM\"],\n    category: \"NLP\",\n    url: \"https://github.com/violetguos/COMP550-Project\",\n    icon: \"üóû\",\n  },\n  // ruby\n  {\n    name: \"Chess\",\n    description: \"command line chess game\",\n    keywords: [\"Ruby\", \"rspec\"],\n    category: \"Ruby\",\n    url: \"https://github.com/violetguos/cmdline-chess\",\n    icon: \"‚ôî\",\n  },\n]\n"],"sourceRoot":""}